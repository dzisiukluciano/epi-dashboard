<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:autoServices="autoServices.*"
		  creationComplete="init()" 
		  paddingTop="7"
		  paddingBottom="3"
		  paddingRight="7"
		  paddingLeft="5"
		  gap="6"
		  horizontalAlign="right" 
		  currentState="podState">

	<fx:Script>
		<![CDATA[
			import autoValueObjects.Pod;
			import autoValueObjects.PodType;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.rpc.Fault;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var podTypes:ArrayCollection;
			
			[Bindable]
			private var pod:Pod;
			
			[Bindable]
			public var podsCollection:ArrayCollection;

			
			private function init():void{
				retrievePodTypesResult.token = podService.retrievePodTypes();
//				BindingUtils.bindSetter(setValues,this,"pod");
			}
			
			public function setPod(pod:Pod):void{
				cleanAll();
				this.pod = pod;
				if(pod!=null){
					this.txtTitle.text = pod.title;
					this.txtDataSource.text = pod.dataSource;
					this.txtValueField.text = pod.valueField;
					this.cmbType.selectedItem = null;
					for each (var podType:PodType in cmbType.dataProvider){
						if(pod.type != null && podType.name == pod.type.name){
							this.cmbType.selectedItem = podType;
							break;
						}
					}
					onChangeType();
					if(currentState=="podState"){					
						this.txtCategoryField.text = pod.categoryField;
					}else{							
						this.txtCode.text = pod.code;
						this.txtScale.text = pod.joinTable;			
					}
					
				}
			}
			
			public function retrievePodTypesResultHandler(result:*):void{				
				podTypes = result as ArrayCollection;
			}
			
			private function save():void{
				var campos:String = "";
				if(txtTitle.text == null || txtTitle.text.length == 0)
					campos += "\nTitle";
				if(txtDataSource.text == null || txtDataSource.text.length == 0)
					campos += "\nData Source";
				if(txtValueField.text == null || txtValueField.text.length == 0)
					campos += "\nValue Field";
				if(cmbType.selectedItem == null)
					campos += "\nPod Type";
				
				if(currentState=="podState"){
					if(txtCategoryField.text == null || txtCategoryField.text.length == 0)
						campos += "\nCategory Field";
				}else{
					if(txtScale.text == null || txtScale.text.length == 0)
						campos += "\nScale source";
					if(txtCode.text == null || txtCode.text.length == 0)
						campos += "\nIndicator code";
				}
				
				if(campos.length>0){
					Alert.show("Complete the following fields:"+campos,"Required data");
				}else{
					
					Alert.show("Are you sure you want to save this information?","Confirm",Alert.OK|Alert.CANCEL,null,confirmSave,null,Alert.OK);				
				}
			}
			
			private function confirmSave(eventObj:CloseEvent):void{
				if(eventObj.detail==Alert.OK){
					
					var creation:Boolean = false;
					var newPod:Pod = this.pod;
					if(this.pod == null){
						newPod = new Pod();
						creation = true;
					}
										
					newPod.title = this.txtTitle.text;
					newPod.dataSource = this.txtDataSource.text;
					newPod.valueField = this.txtValueField.text;
					newPod.type = this.cmbType.selectedItem;
					if(currentState=="podState"){					
						newPod.categoryField = this.txtCategoryField.text;
					}else{							
						newPod.joinTable = this.txtScale.text;
						newPod.code = this.txtCode.text;		
					}		
					
					if(creation){
						savePodResult.token = podService.saveOrUpdatePod(newPod);
					}else{
						updatePodResult.token = podService.saveOrUpdatePod(newPod);						
					}
					
				}
			}
			
			private function cancel():void{
				this.visible = false;
				this.pod = null;
			}
			
			private function cleanAll():void{
				this.txtTitle.text = "";
				this.txtDataSource.text = "";
				this.txtValueField.text = "";
				this.cmbType.selectedItem = null;
				if(currentState=="podState"){					
					this.txtCategoryField.text = "";
				}else{	
					this.txtCode.text = "";
					this.txtScale.text = "";				
				}
			}
									
			private function updatePodResultHandler(result:*):void{
				this.visible = false;				
				this.pod = result as Pod;
			}
			private function savePodResultHandler(result:*):void{
				this.visible = false;				
				this.podsCollection.addItem(result as Pod);
			}
			private function saveOrUpdatePodFaultHandler(e:Fault):void{
				var index:int = e.faultString.indexOf("InvalidPodConfigurationException");
				if (index != -1){
					Alert.show("Invalid pod configuration","Error");
				}else{
					Alert.show(e.faultString + '\n' + e.faultDetail);
				}
			}
			
			private function onChangeType():void{
				if(PodType(cmbType.selectedItem).name == "Gauge")
					this.currentState = "indicatorState";
				else
					this.currentState = "podState";
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="podState"/>
		<s:State name="indicatorState"/>
	</s:states>
	
	<fx:Declarations>
		<s:CallResponder id="retrievePodTypesResult" result="retrievePodTypesResultHandler(event.result)"
						 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"/>		
		<s:CallResponder id="updatePodResult" result="updatePodResultHandler(event.result)"
						 fault="saveOrUpdatePodFaultHandler(event.fault)"/>
		<s:CallResponder id="savePodResult" result="savePodResultHandler(event.result)"
						 fault="saveOrUpdatePodFaultHandler(event.fault)"/>
		<autoServices:PodService id="podService" 					 
								 showBusyCursor="true"/>
	</fx:Declarations>
	
	<mx:Spacer height="100%"/>
	<mx:FormItem label="Title:" fontWeight="bold" required="true">			
		<mx:TextInput id="txtTitle" width="150" maxChars="30"/>
	</mx:FormItem>
	<mx:FormItem label="Pod type:" fontWeight="bold" required="true">			
		<s:DropDownList id="cmbType" dataProvider="{podTypes}" labelField="name" 
						width="150" prompt="Select" change="onChangeType()"/>
	</mx:FormItem>
	
	<mx:FormItem label="Data source:" fontWeight="bold" required="true">			
		<mx:TextInput id="txtDataSource" width="150"/>
	</mx:FormItem>
	<mx:FormItem label="Value field:" fontWeight="bold" required="true">			
		<mx:TextInput id="txtValueField" width="150"/>
	</mx:FormItem>
	<mx:FormItem label="Category field:" fontWeight="bold" required="true" includeIn="podState">			
		<mx:TextInput id="txtCategoryField" width="150"/>
	</mx:FormItem>
	<mx:FormItem label="Indicator code :" fontWeight="bold" required="true" includeIn="indicatorState">			
		<mx:TextInput id="txtCode" width="150" maxChars="32"/>
	</mx:FormItem>
	<mx:FormItem label="Scale source :" fontWeight="bold" required="true" includeIn="indicatorState">			
		<mx:TextInput id="txtScale" width="150"/>
	</mx:FormItem>
	
	
	<mx:Spacer height="100%"/>
	
	<mx:HBox width="100%" horizontalAlign="right" paddingTop="10">
		<mx:Button label="Save" icon="@Embed(source='../assets/save.png')" click="save()"/>
		<mx:Button label="Cancel" icon="@Embed(source='../assets/cancel.png')" click="cancel()"/>
	</mx:HBox>
	
</s:VGroup>
